{
    "collab_server" : "",
    "contents" : "##### Estimation for Topic Models ######\n\n## intended main function; provides defaults and selects K via marginal lhd\ntopics <- function(counts,\n                   K,\n                   shape=NULL,\n                   initopics=NULL,\n                   tol=0.1,\n                   bf=FALSE,\n                   kill=2,\n                   ord=TRUE,\n                   verb=1,\n                   admix=TRUE,\n                   nbundles=1,\n                   use_squarem=FALSE,\n                   init.adapt=FALSE,\n                   type=\"full\",\n                   ind_model_indices = NULL,\n                   signatures=NULL,\n                   light=1,\n                   method_admix=1,\n                   sample_init=TRUE,\n                   tmax=10000,...)\n  ## tpxselect defaults: tmax=10000, wtol=10^(-4), qn=100, grp=NULL,\n  ## nonzero=FALSE, dcut=-10, top_genes=100, burn_in=5\n{\n  X <- CheckCounts(counts)\n  p <- ncol(X)\n  if(verb>0)\n    cat(sprintf(\"\\nEstimating on a %d document collection.\\n\", nrow(X)))\n\n  ## check the prior parameters for theta\n  if(prod(shape>0) != 1){ stop(\"use shape > 0\\n\") }\n\n  if(type == \"independent\"  &&  is.null(signatures)){\n    stop(\"For an independent model, there has to be a grouping factor data\")\n  }\n\n  if(type==\"independent\" && is.null(ind_model_indices)){\n    ind_model_indices <- dim(counts)[2]\n  }\n\n  ## check the list of candidate K values\n  if(prod(K>1)!=1){ stop(cat(\"use K values > 1\\n\")) }\n  K <- sort(K)\n\n  index_init <- 1:(max(2, min(ceiling(nrow(X)*.05),100)));\n  if(sample_init==TRUE){\n    samp_length <- length(index_init);\n    index_init <- sample(1:nrow(X),samp_length);\n  }\n\n  ## initialize\n  if(init.adapt==FALSE){\n\n  initopics <- tpxinit(X[index_init,], initopics, K[1],\n                       shape, verb, nbundles=1, use_squarem=FALSE, init.adapt)\n    #initopics <- t(gtools::rdirichlet(4, rep(1+ 1/K*p, p)))\n  }else{\n #   if(change_start_points){\n #      initopics <- tpxinit(X[1:min(ceiling(nrow(X)*.05),100),], initopics, K[1]+3,\n #                          shape, verb, nbundles=1, use_squarem=FALSE, init.adapt)\n #      initopics <- initopics[,sort(sample(1:(K[1]+2), K[1], replace=FALSE))];\n #   }else{\n      initopics <- tpxinit(X[index_init,], initopics, K[1],\n                           shape, verb, nbundles=1, use_squarem=FALSE,\n                           init.adapt)\n #    }\n  }\n\n  initopics[initopics==1] <- 1 - 1e-14;\n  initopics[initopics==0] <- 1e-14;\n  initopics <- normalizetpx(initopics, byrow = FALSE)\n\n  if(type==\"independent\"){\n     out <-  tpxThetaGroupInd(initopics, ind_model_indices, signatures)\n     initopics <-out$theta;\n  }\n\n # initopics <- initopics[,sort(sample(1:(K[1]+2), K[1], replace=FALSE))];\n # initopics <- initopics[,1:K[1]];\n  ## either search for marginal MAP K and return bayes factors, or just fit\n  tpx <- tpxSelect(X, K, bf, initopics,\n                   alpha=shape, tol, kill, verb, nbundles, use_squarem,\n                   type, ind_model_indices, signatures, light, tmax, admix=TRUE,\n                   method_admix=1,sample_init=TRUE, grp=NULL, wtol=10^{-4}, qn=100,\n                   nonzero=FALSE, dcut=-10,\n                   top_genes=150, burn_in=5)\n\n  K <- tpx$K\n\n  ## clean up and out\n  if(ord){ worder <- order(col_sums(tpx$omega), decreasing=TRUE) } # order by decreasing usage\n  else{ worder <- 1:K }\n  ## Main parameters\n  theta=matrix(tpx$theta[,worder], ncol=K, dimnames=list(phrase=dimnames(X)[[2]], topic=paste(1:K)) )\n  omega=matrix(tpx$omega[,worder], ncol=K, dimnames=list(document=NULL, topic=paste(1:K)) )\n  if(nrow(omega)==nrow(X)){ dimnames(omega)[[1]] <- dimnames(X)[[1]] }\n\n  ## topic object\n  out <- list(K=K, theta=theta, omega=omega, BF=tpx$BF, D=tpx$D, X=X)\n  class(out) <- \"topics\"\n  invisible(out) }\n",
    "created" : 1504630525241.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3373380005",
    "id" : "4B0E05BB",
    "lastKnownWriteTime" : 1504633395,
    "last_content_update" : 1504633395194,
    "path" : "~/Documents/covtpx/R/topics.R",
    "project_path" : "R/topics.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}